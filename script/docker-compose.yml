services:
  # Database
  postgres:
    image: postgres:15
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # InfluxDB for metrics
  influxdb:
    image: influxdb:2.7
    env_file:
      - .env
    ports:
      - "8086:8086"
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME: ${INFLUXDB_INIT_USERNAME}
      DOCKER_INFLUXDB_INIT_PASSWORD: ${INFLUXDB_INIT_PASSWORD}
      DOCKER_INFLUXDB_INIT_ORG: ${INFLUXDB_INIT_ORG}
      DOCKER_INFLUXDB_INIT_BUCKET: ${INFLUXDB_INIT_BUCKET}
    volumes:
      - influxdb_data:/var/lib/influxdb2

  # MinIO for file storage
  minio:
    image: minio/minio:latest
    env_file:
      - .env
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data

  # API Gateway
  api-gateway:
    build:
      context: ..
      dockerfile: docker/api-gateway.Dockerfile
    env_file:
      - .env
    ports:
      - "${API_GATEWAY_PORT}:8080"
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - JWT_SECRET=${JWT_SECRET}
      - AUTH_SERVICE_URL=${AUTH_SERVICE_URL}
      - CONTENT_SERVICE_URL=${CONTENT_SERVICE_URL}
      - PROGRESS_SERVICE_URL=${PROGRESS_SERVICE_URL}
      - VOCABULARY_SERVICE_URL=${VOCABULARY_SERVICE_URL}
      - PHONETIC_SERVICE_URL=${PHONETIC_SERVICE_URL}
      - SOCIAL_SERVICE_URL=${SOCIAL_SERVICE_URL}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      auth-service:
        condition: service_started
      content-service:
        condition: service_started
      progress-service:
        condition: service_started
      vocabulary-service:
        condition: service_started
      phonetic-service:
        condition: service_started
      social-service:
        condition: service_started
    restart: unless-stopped

  # Auth Service
  auth-service:
    build:
      context: ..
      dockerfile: docker/auth-service.Dockerfile
    env_file:
      - .env
    ports:
      - "${AUTH_SERVICE_PORT}:8001"
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - JWT_SECRET=${JWT_SECRET}
      - PORT=${AUTH_SERVICE_PORT}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  # Content Service
  content-service:
    build:
      context: ..
      dockerfile: docker/content-service.Dockerfile
    env_file:
      - .env
    ports:
      - "${CONTENT_SERVICE_PORT}:8002"
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - MINIO_ENDPOINT=${MINIO_ENDPOINT}
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
      - PORT=${CONTENT_SERVICE_PORT}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  # Progress Service
  progress-service:
    build:
      context: ..
      dockerfile: docker/progress-service.Dockerfile
    env_file:
      - .env
    ports:
      - "${PROGRESS_SERVICE_PORT}:8003"
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - INFLUXDB_URL=${INFLUXDB_URL}
      - INFLUXDB_TOKEN=${INFLUXDB_TOKEN}
      - INFLUXDB_ORG=${INFLUXDB_ORG}
      - INFLUXDB_BUCKET=${INFLUXDB_BUCKET}
      - PORT=${PROGRESS_SERVICE_PORT}
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  # Vocabulary Service
  vocabulary-service:
    build:
      context: ..
      dockerfile: docker/vocabulary-service.Dockerfile
    env_file:
      - .env
    ports:
      - "${VOCABULARY_SERVICE_PORT}:8004"
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - PORT=${VOCABULARY_SERVICE_PORT}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  # Phonetic Service
  phonetic-service:
    build:
      context: ..
      dockerfile: docker/phonetic-service.Dockerfile
    env_file:
      - .env
    ports:
      - "${PHONETIC_SERVICE_PORT}:8005"
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - PORT=${PHONETIC_SERVICE_PORT}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  # Social Service
  social-service:
    build:
      context: ..
      dockerfile: docker/social-service.Dockerfile
    env_file:
      - .env
    ports:
      - "${SOCIAL_SERVICE_PORT}:8006"
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - JWT_SECRET=${JWT_SECRET}
      - PORT=${SOCIAL_SERVICE_PORT}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  influxdb_data:
  minio_data:

networks:
 default:
   driver: bridge
